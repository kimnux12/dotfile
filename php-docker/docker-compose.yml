version: '3.9'
services:
  # Apache webserver service
  webserver:
    container_name: PHP-webServer  # docker exec -it PHP-webServer bash로 접속할수 있음.
    build:                         # https://www.youtube.com/watch?v=V-MDfE1I6u0 12:50부터 참고
    # Dockerfile path              # composer create-project laravel/laravel . (콤마 주의)
                                   # exit 후 일반 터미널 창에서 docker exec laravel-docker bash -c "composer update"실행
                                   # docker exec laravel-app bach -c "php artisan migrate"
                                   # docker exec laravel-app bash -c "php artisan db:seed"
      context: .
      dockerfile: Dockerfile  
    # Mount the local ./app directory to /var/www/html in the container
    volumes:
      - ./app:/var/www/html 
    # Map port 8000 on the host to port 80 on the container 
    # 브라우저로에서  localhost:8000 으로 홈페이지에 접속할수 있음.
    # 출처 : https://thriveread.com/docker-compose-with-apache-php-and-postgresql/
    ports:
      - 8000:80  
    depends_on:
      - postgres

  postgres:
    image: postgres:16.1
    container_name: postgres
    environment:
      POSTGRES_DB: test_database
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: db_password
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
        # http://localhost:5050 으로 pgAdmin4에 접속할수 있음
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      # Default email for pgAdmin 4
      PGADMIN_DEFAULT_EMAIL: admin@email.com
      # Password for accessing pgAdmin 4
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      # Expose pgadmin on 5050
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: always
volumes:
  pgadmin_data:
